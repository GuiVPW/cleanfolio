{"version":3,"sources":["contexts/theme.tsx","styles/global.ts","styles/theme.ts","styles/StyledProvider.tsx","App.styled.tsx","data/about.ts","data/contact.ts","data/header.ts","data/projects.ts","data/skills.ts","components/Button/Button.styled.tsx","components/Link/Link.styled.tsx","components/Navbar/Navbar.styled.tsx","components/Navbar/Navbar.tsx","components/Header/Header.styled.tsx","components/Header/Header.tsx","components/About/About.styled.tsx","components/About/About.tsx","components/ProjectContainer/ProjectContainer.styled.tsx","components/ProjectContainer/ProjectContainer.tsx","components/Section/Section.styled.tsx","components/Projects/Projects.styled.tsx","components/Projects/Projects.tsx","components/Skills/Skills.styled.tsx","components/Skills/Skills.tsx","components/ScrollToTop/ScrollToTop.styled.tsx","components/ScrollToTop/ScrollToTop.tsx","components/Contact/Contact.tsx","components/Footer/Footer.styled.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","themeName","ThemeProvider","children","useState","setThemeName","useEffect","localStorage","getItem","Provider","value","toggleTheme","name","setItem","GlobalStyle","createGlobalStyle","props","theme","foreground","alt","background","main","primary","shadow","darkTheme","StylesProvider","useContext","lightTheme","AppContainer","styled","div","Main","aboutData","role","description","social","linkedin","github","contactData","headerData","projectsData","skillsData","Button","button","withConfig","shouldForwardProp","prop","includes","buttonType","css","Link","a","type","color","NavList","ul","NavHamburguer","Navbar","showNavList","setShowNavList","toggleNavList","className","style","display","undefined","length","href","onClick","aria-label","HeaderContainer","header","Header","homepage","title","AboutContainer","Name","span","Role","h2","Description","p","Contact","AboutLink","attrs","rel","target","marginRight","AboutButton","About","resume","Project","Stack","ProjectContainer","project","stack","map","item","uniqid","sourceCode","livePreview","Section","section","SectionTitle","Grid","Projects","id","SkillsList","Skills","skill","ScrollContainer","ScrollToTop","isVisible","setIsVisible","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","fontSize","flexDirection","FooterContainer","footer","FooterLink","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.b832bbd3.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\n\ntype Theme = 'light' | 'dark'\n\ntype ThemeContextTypes = [\n  {\n    themeName: Theme\n    toggleTheme?: () => void\n  }\n]\n\nconst ThemeContext = createContext<ThemeContextTypes>([{ themeName: 'light' }])\n\nconst ThemeProvider: React.FC = ({ children }) => {\n  const [themeName, setThemeName] = useState<Theme>('light')\n\n  useEffect(() => {\n    const isDark = localStorage.getItem('themeName') === 'dark'\n    if (isDark) setThemeName('dark')\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeProvider, ThemeContext }\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n\t* {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tborder: 0;\n\t\toutline: 0;\n\t\tbackground-color: inherit;\n\t\tcolor: inherit;\n\t\tfont-family: inherit;\n\t\tfont-size: inherit;\n\t\tbox-shadow: none;\n\t\tbox-sizing: border-box;\n\t}\n\n\thtml {\n\t\tscroll-behavior: smooth;\n\t}\n\n\th1,\n\th2,\n\th3,\n\th4 {\n\t\tline-height: 1.2;\n\t\tcolor: ${(props) => props.theme.foreground.alt};\n\t}\n\n\th1 {\n\t\tfont-size: 4rem;\n\n\t\t@media only screen and (max-width: 900px) {\n\t\t\tfont-size: 2.6rem;\n\t\t}\n\t}\n\n\th2 {\n\t\tfont-size: 2rem;\n\t}\n\n\th3 {\n\t\tfont-size: 1.5rem;\n\t}\n\n\th4 {\n\t\tfont-size: 1.3rem;\n\t}\n\n\tul {\n\t\tlist-style-type: none;\n\t}\n\n\ta {\n\t\ttext-decoration: none;\n\t}\n\n\tbutton {\n\t\tcursor: pointer;\n\t}\n`\n","export const theme = {\n  background: {\n    main: '#FCFCFC',\n    alt: '#FFF',\n  },\n  foreground: {\n    main: '#555',\n    alt: '#444',\n  },\n  primary: '#2978B5',\n  shadow: 'rgba(100, 100, 111, 0.2) 0px 7px 29px 0px',\n}\n\nexport type Theme = typeof theme\n\nexport const darkTheme: Theme = {\n  ...theme,\n  background: {\n    main: '#23283E',\n    alt: '#2A2F4C',\n  },\n  foreground: {\n    main: '#BDBDDD',\n    alt: '#CDCDFF',\n  },\n  primary: '#90A0D9',\n  shadow: 'rgba(0, 0, 0, 0.16) 0 10px 36px 0, rgba(0, 0, 0, 0.06) 0 0 0 1px',\n}\n\ndeclare module 'styled-components' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n","import React, { useContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { ThemeContext } from '../contexts/theme'\nimport { theme as lightTheme, darkTheme } from './theme'\n\nexport const StylesProvider: React.FC = ({ children }) => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <ThemeProvider theme={themeName === 'light' ? lightTheme : darkTheme}>\n      {children}\n    </ThemeProvider>\n  )\n}\n\nexport default StylesProvider\n","import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  font-family: 'Poppins', sans-serif;\n  line-height: 1.5;\n  color: ${(props) => props.theme.foreground.main};\n  background-color: ${(props) => props.theme.background.main};\n\n  .center {\n    display: flex;\n    align-items: center;\n  }\n`\n\nexport const Main = styled.main`\n  max-width: 1100px;\n  width: 95%;\n  margin: 0 auto;\n`\n","import { AboutModel } from '../models'\n\n// All the properties are optional - can be left empty or deleted\nexport const aboutData: AboutModel = {\n  name: 'Guilherme Vieira de Paiva',\n  role: 'Full-stack Engineer',\n  description:\n    'I am a huge lover of physics, astronomy & astrophysics. I enjoy creating out of the box projects and huge ideas in simple codes.',\n  // resume: 'https://example.com',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/guilhermevp',\n    github: 'https://github.com/GuiVPW',\n  },\n}\n","import { ContactModel } from '../models'\n\n// Email is optional - if left empty Contact section won't show up\nexport const contactData: ContactModel = {\n  email: 'guivpw68@gmail.com',\n}\n","import { HeaderModel } from '../models'\n\n// All the properties are optional - can be left empty or deleted\nexport const headerData: HeaderModel = {\n  homepage: 'http://guivpw.github.io/cleanfolio',\n  title: 'TS.',\n}\n","import { ProjectModel } from '../models'\n\n// Projects can be added and removed\n// if there are no projects, Projects section won't show up\nexport const projectsData: ProjectModel[] = []\n","// Skills can be added or removed\n// if there are no skills, Skills section won't show up\nexport const skillsData: string[] = [\n  'Node',\n  'Typescript',\n  'SQL',\n  'NoSQL',\n  'Cache',\n  'Rest APIs',\n  'GraphQL APIs',\n  'Nest',\n  'Unit, Integration and E2E tests',\n  'CQRS and parallelism',\n  'React',\n  'React hooks',\n  'Typescript',\n  'Babel',\n  'Webpack',\n  'Redux, Context, Zustand and Storeon',\n  'Styled-components',\n  'SASS',\n  'Material UI, Ant Design and Bootstrap',\n  'Caching',\n  'Testing-library',\n  'Storybook',\n  'Docker',\n  'CI/CD',\n  'AWS Cloud',\n  'AWS, Vercel and Heroku Deploy',\n  'Elastic Stack',\n  'Profiling and Monitoring with APM, Beats and Kibana',\n  'Git',\n]\n","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button.withConfig<{\n  buttonType?: 'outline' | 'plain' | 'icon'\n}>({\n  shouldForwardProp: (prop) => !['buttonType'].includes(prop),\n})`\n  display: block;\n  cursor: pointer;\n  padding: 0.8em 1.4em;\n  font-weight: 500;\n  font-size: 0.9rem;\n  text-transform: lowercase;\n  transition: transform 0.2s ease-in-out;\n\n  ${(props) =>\n    props.buttonType === 'outline' &&\n    css`\n      color: ${props.theme.primary};\n      border: 2px solid ${props.theme.primary};\n      position: relative;\n      overflow: hidden;\n      z-index: 1;\n\n      &:hover,\n      &:focus {\n        color: ${props.theme.background.main};\n      }\n\n      &:before {\n        content: '';\n        position: absolute;\n        background-color: ${props.theme.primary};\n        right: 100%;\n        bottom: 0;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        transition: right 0.2s ease-in-out;\n      }\n\n      &:hover:before,\n      &:focus:before {\n        right: 0;\n      }\n    `}\n\n  ${(props) =>\n    props.buttonType === 'plain' &&\n    css`\n      text-transform: initial;\n      background-color: ${props.theme.background.alt};\n      box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 3px 0px;\n      border: 0;\n\n      &:hover {\n        transform: translateY(-4px);\n      }\n    `}\n\n\t${(props) =>\n    props.buttonType === 'icon' &&\n    css`\n      padding: 0;\n      &:hover,\n      &:focus {\n        color: ${props.theme.primary};\n      }\n      &:active {\n        transform: translateY(-5px);\n      }\n    `}\n`\n","import styled, { css } from 'styled-components'\n\nexport const Link = styled.a.withConfig<{ type?: 'normal' | 'nav' | 'icon' }>({\n  shouldForwardProp: (prop) => !['type'].includes(prop),\n})`\n  padding: 0 0 0.3em 0;\n  position: relative;\n\n  &:hover {\n    color: ${(props) => props.theme.primary};\n  }\n\n  &::before {\n    content: '';\n    display: inline;\n    width: 0%;\n    height: 0.2em;\n    position: absolute;\n    bottom: 0;\n    background-color: ${(props) => props.theme.primary};\n    transition: width 0.2s ease-in;\n  }\n\n  &:hover::before,\n  &:focus::before {\n    width: 100%;\n  }\n\n  ${(props) =>\n    props.type === 'normal' && { color: props.theme.foreground.main }}\n  ${(props) =>\n    props.type === 'nav' &&\n    css`\n      color: ${props.theme.foreground.main};\n      text-transform: lowercase;\n      font-weight: 500;\n    `}\n\t${(props) => props.type === 'icon' && { color: props.theme.primary }}\n`\n","import styled from 'styled-components'\nimport { Button } from '../Button'\n\nexport const NavList = styled.ul.withConfig<{ show?: boolean }>({\n  shouldForwardProp: (prop) => !['show'].includes(prop),\n})`\n  margin-right: 1.5em;\n  display: flex;\n\n  li {\n    margin-left: 1.5em;\n  }\n\n  @media only screen and (max-width: 600px) {\n    display: none;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    inset: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 2;\n\n    li {\n      margin: 0.5em 0;\n    }\n  }\n`\n\nexport const NavHamburguer = styled(Button)`\n  display: none;\n\n  @media only screen and (max-width: 600px) {\n    display: flex;\n    z-index: 2;\n    margin-left: 0.8em;\n  }\n`\n","import { useContext, useState } from 'react'\n\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { ThemeContext } from '../../contexts/theme'\n\nimport { projectsData, skillsData, contactData } from '../../data'\n\nimport { Button } from '../Button'\nimport { Link } from '../Link'\nimport { NavHamburguer, NavList } from './Navbar.styled'\n\nexport const Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  if (!contactData.email) return null\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center'>\n      <NavList style={{ display: showNavList ? 'flex' : undefined }}>\n        {projectsData.length > 0 && (\n          <li>\n            <Link type='nav' href='#projects' onClick={toggleNavList}>\n              Projects\n            </Link>\n          </li>\n        )}\n\n        {skillsData.length > 0 && (\n          <li>\n            <Link type='nav' href='#skills' onClick={toggleNavList}>\n              Skills\n            </Link>\n          </li>\n        )}\n\n        {contactData.email && (\n          <li>\n            <Link type='nav' href='#contact' onClick={toggleNavList}>\n              Contact\n            </Link>\n          </li>\n        )}\n      </NavList>\n\n      <Button\n        buttonType='icon'\n        type='button'\n        onClick={toggleTheme}\n        className='center'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </Button>\n\n      <NavHamburguer\n        buttonType='icon'\n        type='button'\n        onClick={toggleNavList}\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </NavHamburguer>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.header`\n  height: 8em;\n  max-width: 1100px;\n  width: 95%;\n  margin: 0 auto;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 600px) {\n    height: 6em;\n  }\n`\n","import { headerData } from '../../data'\n\nimport { Navbar } from '../Navbar/Navbar'\nimport { Link } from '../Link'\nimport { HeaderContainer } from './Header.styled'\n\nexport const Header = () => {\n  const { homepage, title } = headerData\n\n  return (\n    <HeaderContainer className='center'>\n      <h3>\n        {homepage ? (\n          <Link href={homepage} type='normal'>\n            {title}\n          </Link>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </HeaderContainer>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport { Link } from '../Link'\nimport { Button } from '../Button'\n\nexport const AboutContainer = styled.div`\n  flex-direction: column;\n  margin-top: 3em;\n\n  @media only screen and (max-width: 600px) {\n    align-items: flex-start;\n    margin-top: 2em;\n  }\n`\n\nexport const Name = styled.span`\n  color: ${(props) => props.theme.primary};\n`\n\nexport const Role = styled.h2`\n  margin-top: 1.2em;\n`\n\nexport const Description = styled.p`\n  font-size: 1rem;\n  max-width: 600px;\n  margin-top: 2.4em;\n`\n\nexport const Contact = styled.div`\n  margin-top: 2.4em;\n`\n\nexport const AboutLink = styled(Link).attrs({\n  rel: 'noreferrer noopener',\n  target: 'blank',\n})`\n  ${(props) => props.type === 'icon' && { marginRight: '0.8em' }}\n`\n\nexport const AboutButton = styled(Button)`\n  ${(props) => props.buttonType === 'outline' && { marginRight: '1em' }}\n`\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\n\nimport { aboutData } from '../../data'\n\nimport {\n  AboutButton,\n  AboutContainer,\n  AboutLink,\n  Contact,\n  Description,\n  Name,\n  Role,\n} from './About.styled'\n\nexport const About = () => {\n  const { name, role, description, resume, social } = aboutData\n\n  return (\n    <AboutContainer className='center'>\n      {name && (\n        <h1>\n          Hi, I am <Name>{name}.</Name>\n        </h1>\n      )}\n\n      {role && <Role>A {role}.</Role>}\n      <Description>{description && description}</Description>\n\n      <Contact className='center'>\n        {resume && (\n          <a href={resume}>\n            <AboutButton buttonType='outline'>Resume</AboutButton>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <AboutLink type='icon' href={social.github} aria-label='github'>\n                <GitHubIcon />\n              </AboutLink>\n            )}\n\n            {social.linkedin && (\n              <AboutLink\n                type='icon'\n                href={social.linkedin}\n                aria-label='linkedin'\n              >\n                <LinkedInIcon />\n              </AboutLink>\n            )}\n          </>\n        )}\n      </Contact>\n    </AboutContainer>\n  )\n}\n\nexport default About\n","import styled from 'styled-components'\n\nexport const Project = styled.div`\n  padding: 2em;\n  margin: 0 auto;\n  text-align: center;\n  box-shadow: ${(props) => props.theme.shadow};\n  transition: transform 0.2s linear;\n\n  &:hover {\n    transform: translateY(-7px);\n  }\n\n  a {\n    margin-left: 0.5em;\n  }\n`\n\nexport const Description = styled.p`\n  margin-top: 1em;\n`\n\nexport const Stack = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 1.2em 0;\n\n  li {\n    margin: 0.5em;\n    font-weight: 500;\n    font-size: 0.8rem;\n    color: ${(props) => props.theme.foreground.alt};\n  }\n`\n","import uniqid from 'uniqid'\n\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\n\nimport { Project, Description, Stack } from './ProjectContainer.styled'\n\nimport { Link } from '../Link'\nimport { ProjectModel } from '../../models'\n\nexport const ProjectContainer = ({ project }: { project: ProjectModel }) => (\n  <Project>\n    <h3>{project.name}</h3>\n\n    <Description>{project.description}</Description>\n    {project.stack && (\n      <Stack>\n        {project.stack.map((item) => (\n          <li key={uniqid()}>{item}</li>\n        ))}\n      </Stack>\n    )}\n\n    {project.sourceCode && (\n      <Link\n        type='icon'\n        target='_blank'\n        rel='noreferrer noopener'\n        href={project.sourceCode}\n        aria-label='source code'\n      >\n        <GitHubIcon />\n      </Link>\n    )}\n\n    {project.livePreview && (\n      <Link\n        type='icon'\n        target='_blank'\n        rel='noreferrer noopener'\n        href={project.livePreview}\n        aria-label='live preview'\n      >\n        <LaunchIcon />\n      </Link>\n    )}\n  </Project>\n)\n\nexport default ProjectContainer\n","import styled from 'styled-components'\n\nexport const Section = styled.section`\n  margin-top: 5em;\n\n  @media only screen and (max-width: 600px) {\n    margin-top: 4em;\n  }\n`\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 1em;\n  text-transform: uppercase;\n`\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  max-width: 1100px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(18em, 1fr));\n  grid-gap: 2em;\n`\n","import uniqid from 'uniqid'\n\nimport { ProjectContainer } from '../ProjectContainer'\nimport { Section, SectionTitle } from '../Section'\nimport { Grid } from './Projects.styled'\n\nimport { projectsData } from '../../data'\n\nexport const Projects = () => {\n  if (!projectsData.length) return null\n\n  return (\n    <Section id='projects'>\n      <SectionTitle>Projects</SectionTitle>\n\n      <Grid>\n        {projectsData.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </Grid>\n    </Section>\n  )\n}\n\nexport default Projects\n","import styled from 'styled-components'\n\nexport const SkillsList = styled.ul`\n  max-width: 450px;\n  width: 95%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  li {\n    margin: 0.5em;\n  }\n`\n","import uniqid from 'uniqid'\n\nimport { skillsData } from '../../data'\n\nimport { Section, SectionTitle } from '../Section'\nimport { Button } from '../Button'\nimport { SkillsList } from './Skills.styled'\n\nexport const Skills = () => {\n  if (!skillsData.length) return null\n\n  return (\n    <Section id='skills'>\n      <SectionTitle>Skills</SectionTitle>\n      <SkillsList>\n        {skillsData.map((skill) => (\n          <li key={uniqid()}>\n            <Button buttonType='plain'>{skill}</Button>\n          </li>\n        ))}\n      </SkillsList>\n    </Section>\n  )\n}\n\nexport default Skills\n","import styled from 'styled-components'\n\nexport const ScrollContainer = styled.div`\n  position: fixed;\n  bottom: 2em;\n  right: 4em;\n  background-color: transparent;\n\n  @media only screen and (max-width: 900px) {\n    display: none;\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport { ScrollContainer } from './ScrollToTop.styled'\n\nexport const ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <ScrollContainer>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </ScrollContainer>\n  ) : (\n    <></>\n  )\n}\n\nexport default ScrollToTop\n","import { Button } from '../Button'\nimport { Section, SectionTitle } from '../Section'\n\nimport { contactData } from '../../data'\nimport { ContactModel } from '../../models'\n\nexport const Contact = () => {\n  if (!contactData.email) return null\n\n  return (\n    <Section\n      className='center'\n      id='contact'\n      style={{ flexDirection: 'column' }}\n    >\n      <SectionTitle>Contact</SectionTitle>\n      <a href={`mailto:${contactData.email as ContactModel}`}>\n        <Button buttonType='outline' type='button'>\n          Email me\n        </Button>\n      </a>\n    </Section>\n  )\n}\n\nexport default Contact\n","import styled from 'styled-components'\nimport { Link } from '../Link'\n\nexport const FooterContainer = styled.footer`\n  padding: 3em 0;\n  margin-top: 4em;\n  text-align: center;\n\n  @media only screen and (max-width: 600px) {\n    padding: 2em;\n    margin-top: 3em;\n  }\n`\n\nexport const FooterLink = styled(Link)`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: ${(props) => props.theme.foreground.main};\n`\n","import { FooterContainer, FooterLink } from './Footer.styled'\n\nexport const Footer = () => (\n  <FooterContainer>\n    <FooterLink href='https://github.com/rajshekhar26/cleanfolio'>\n      Created By Raj Shekhar\n    </FooterLink>\n  </FooterContainer>\n)\n\nexport default Footer\n","import { AppContainer, Main } from './App.styled'\n\nimport { Header } from './components/Header'\nimport { About } from './components/About'\nimport { Projects } from './components/Projects'\nimport { Skills } from './components/Skills'\nimport { ScrollToTop } from './components/ScrollToTop'\nimport { Contact } from './components/Contact'\nimport { Footer } from './components/Footer'\n\nconst App = () => (\n  <AppContainer id='top'>\n    <Header />\n\n    <Main>\n      <About />\n      <Projects />\n      <Skills />\n      <Contact />\n    </Main>\n\n    <ScrollToTop />\n    <Footer />\n  </AppContainer>\n)\n\nexport default App\n","import { render } from 'react-dom'\nimport { ThemeProvider } from './contexts/theme'\nimport { GlobalStyle, StylesProvider } from './styles'\nimport App from './App'\n\nrender(\n  <ThemeProvider>\n    <StylesProvider>\n      <GlobalStyle />\n      <App />\n    </StylesProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}